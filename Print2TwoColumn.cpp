#include <QDebug>
#include <QStringList>
#include <QRegExp>

#include "Print2TwoColumn.h"

/**
 * @brief printStr2TwoColumn 将以空格分隔的内容，打印到多行两列中
 * @note 可以通过修改LINE_WIDTH，COL_H_SEPERATOR_PER_LINE,SEP_CHAR修改样式
 * @example 输出格式
 * ".................26.................        .................53................."
 */
void printStr2TwoColumn()
{
    static quint32 LINE_WIDTH = 80; //一行的宽度
    static quint32 COL_H_SEPERATOR_PER_LINE = 8; //一行中两列的间隔
    static char SEP_CHAR = '.';  //分隔符

    const char szNumbers[]
        = "26 53 74 79 82 63 91 73 22 53 35 29 66 24 25 31 46 02 13 85 72 43 20 67 50 76 23 06 40 "
          "28 96 88 77 84 45 15 21 60 83 49 99 78 58 87 18 03 277 864 833 825 013 953 736 425 226 "
          "736 129 490 903 363 271 646 736 726 813 411 413 361 908 058 862 864 832 956 864 525 865 "
          "737 837 635 747 737 109 107 251 747 982 837 825 215 211 847 267 880 837 626 108 103 411 "
          "217 715 870 975 544 779 656 744 458 764 168 216 562 077 541 865 655 877 668 755 302 866 "
          "110 199 617 8638 7475 7875 7356 1178 1088 2277 2436 7426 8656 7655 6423 7777 6555 5433 "
          "6545 7657 5433 9880 8702 8612 0188 9871 0677 8766 3343 3777 2244 7544 7702 1074 7653 "
          "7654 7623 8764 5433 5325 6543 6423 7056 0653 8765 8644 7655 6118 1154 7703 8674 5423 "
          "7534 8762 5734 8277 7374 7272 8862 0177 1761 8767 2345 7654 5433 6511 6531 1075 7120 "
          "9841 1106 3753 2754 8297 1173 9275 4828 5702 8567 3089 9861 2850 8422 76542 46533 75252 "
          "64322 19866 98011 44904 66255 37621 64533 95412 27549 95339 86422 15155 08436 85369 "
          "18643 35438 74323 47721 52741 76208 79285 51915 29477 68224 13655 01678 29371 82102 "
          "35727 44627 64652 50664 45610 27392 82547 99266 21420 56439 47539 14733 49763 38657 "
          "95079 63644 91637 30080 26091 17533 14161 16843 08222 93867 49653 84611 42983 12548 "
          "60258 62938 46104 47250 51252 52952 83704 07650 15733 29332 62969 345783 987104 201896 "
          "916846 456782 376520 569832 238755 387513 452876 984764 045018 298436 112785 090769 "
          "234743 954137 564220 759484 887632 656892 876926 332558 031410 476831 517195 219575 "
          "376490 857393 438753 386280 875316 619474 219564 219575 376982 487615 085377 764973 "
          "387520 114874 978564 576330 103866 657894 984372 349715 769103 496511 041673 392588 "
          "643192 567682 638726 284191 116794 767936 436795 432615 998665 816155 654732 764130 "
          "284938 084503 563982 278402 876944 801019 932548 342988 478902 865014 543790 987655 "
          "037686 765839 258765 965411 423699 356794 175894 763297 538722 090808 443245 578392 "
          "121377 578343 987532 013677 467832 284680 538763 998577 105790 334877 857644 876653 "
          "664893 189568 356543 987564 467558 958747 465379 836753 556794 001579 567833 378696 "
          "189696 276460 354673 287655 801568 765844 968477";
    QRegExp re("[\\s|\\r|\\n|\\f\\t]+");
    QStringList lstNumber = QString(szNumbers).split(re);

    auto genPerLine = [](QString num) -> QString {
        static int nWidth = (LINE_WIDTH - COL_H_SEPERATOR_PER_LINE) / 2;
        int nChar = num.length();
        QString s = QString("%1").arg(num, nWidth / 2 + nChar / 2, SEP_CHAR);
        s += QString("%1").arg("", nWidth / 2 - nChar / 2, SEP_CHAR);
        return s;
    };

    int nLine = 1;
    foreach (QString num, lstNumber) {
        static QString strLine = "";
        if (nLine % 2) {
            strLine = genPerLine(num);
        }
        else {
            strLine += QString("%1").arg("", COL_H_SEPERATOR_PER_LINE, ' ') + genPerLine(num);
            qDebug() << strLine;
        }
        nLine++;
    }
}
